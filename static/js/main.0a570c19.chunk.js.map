{"version":3,"sources":["components/Player.jsx","components/PlayerList.jsx","components/PlayerForm.jsx","components/Score.jsx","components/ScoreList.jsx","App.js","reportWebVitals.js","index.js"],"names":["Player","name","index","removePlayer","className","onClick","icon","faTrash","playerName","PlayerList","setName","i","temp","filter","v","sort","a","b","date","map","value","PlayerForm","useRef","onSubmit","e","preventDefault","current","type","id","placeholder","ref","Score","useContext","CountContext","holeCount","setHoleCount","SkinContext","skinCount","setSkinCount","useState","playerSkinCount","setPlayerSkinCount","createContext","ScoreList","Provider","faArrowLeft","App","isToggled","setIsToggled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.0a570c19.chunk.js","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\n\nfunction Player({ name, index, removePlayer }) {\n    const removeHandle = i => {\n        removePlayer(i);\n    }\n\n\n    return (\n        <li className='player-item'>\n            <div className=\"\"><button className='remove-item' onClick={() => removeHandle(index)\n            }> <FontAwesomeIcon icon={faTrash} /> </button>\n                {name.playerName} </div>\n        </li>\n    )\n}\n\nexport default Player;","import React from 'react';\nimport Player from './Player';\n\nfunction PlayerList({ name, setName }) {\n\n    const removePlayer = i => {\n        let temp = name.filter((v, index) => index !== i);\n        setName(temp);\n    }\n\n    const sortByDate = (a, b) => {\n        return a.date - b.date;\n    }\n\n    return (\n        <div className=\"card\">\n            <div className='player-list'>\n                {\n                    name.sort(sortByDate).map((value, index) => (\n                        <Player\n                            key={index}\n                            name={value}\n                            index={index}\n                            removePlayer={removePlayer} />\n                    ))\n                }\n            </div>\n        </div>\n    )\n\n}\n\nexport default PlayerList;","import React, { useRef, useState } from \"react\";\nimport PlayerList from \"./PlayerList\";\n\nfunction PlayerForm({ name, setName }) {\n\n    const playerName = useRef(null);\n\n    const addPlayer = e => {\n        e.preventDefault();\n\n        setName([...name, {\n            \"playerName\": playerName.current.value,\n        }]);\n\n        playerName.current.value = null;\n\n    }\n\n    return (\n        <form className='player-form' onSubmit={addPlayer}>\n            <h1> Add Players </h1>\n            <div>\n                <input className='submitButton' type='text' name=\"playerName\" id=\"playerName\"\n                    placeholder=\"Player Name...\" ref={playerName} />\n                <input className='submitButton' type='submit' value='+'></input>\n                <div>\n                    <PlayerList name={name} setName={setName} />\n                </div>\n            </div>\n        </form>\n    );\n\n}\n\nexport default PlayerForm;","import React, { useState, useContext } from \"react\";\nimport { CountContext, SkinContext } from './ScoreList';\n\n\n\nfunction Score({ name }) {\n\n    // const { holeCount, setHoleCount } = useContext(CountContext);\n    const { holeCount, setHoleCount } = useContext(CountContext);\n    const { skinCount, setSkinCount } = useContext(SkinContext);\n    const [playerSkinCount, setPlayerSkinCount] = useState(0);\n\n    const addSkin = () => {\n        setPlayerSkinCount(playerSkinCount + skinCount);\n        //reset skin count to 1\n        setSkinCount(skinCount - skinCount + 1);\n        //advance holes 1\n        setHoleCount(holeCount + 1);\n    };\n\n\n    return (\n        <div className=\"player-item\">\n            {name.playerName}: {playerSkinCount} <button className='add-skin' onClick={() => addSkin()\n            }> + </button></div>\n    )\n}\n\nexport default Score;","import React, { useState, createContext } from 'react';\nimport Score from './Score';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\n\n\n\nexport const CountContext = createContext(1);\nexport const SkinContext = createContext(1);\n\nfunction ScoreList({ name }) {\n\n    const [holeCount, setHoleCount] = useState(1);\n    const [skinCount, setSkinCount] = useState(1);\n    //const { playerSkinCount, setPlayerSkinCount } = useContext(PlayerSkinContext);\n\n    const pushHole = () => {\n        setSkinCount(skinCount + 1);\n        setHoleCount(holeCount + 1);\n\n    };\n\n    const reduceHole = () => {\n        if (holeCount > 1 && skinCount > 1) {\n            setHoleCount(holeCount - 1);\n            setSkinCount(skinCount - 1);\n            //return player skin count\n            // setPlayerSkinCount(playerSkinCount - 1);\n        };\n    }\n\n    const sortByDate = (a, b) => {\n        return a.date - b.date;\n    }\n\n    return (\n        <CountContext.Provider value={{ holeCount, setHoleCount }}>\n            <div><div className='score-title'>\n                <button className=\"previous-hole\" onClick={() => reduceHole()}>            <FontAwesomeIcon icon={faArrowLeft} /></button>\n                Hole #{holeCount}\n            </div>\n                <SkinContext.Provider value={{ skinCount, setSkinCount }}>\n                    <div className='score-title-2'>\n                        Skins Available:  {skinCount}\n                        <div><button className=\"push\" onClick={() => pushHole()}>\n                            Push Hole </button>\n                        </div>\n                    </div>\n                    <li className='player-item'>\n                        {\n                            name.sort(sortByDate).map((value, index) => (\n                                <Score\n                                    skinCount={skinCount}\n                                    key={index}\n                                    name={value}\n                                    index={index}\n                                />\n                            ))\n                        }\n                    </li>\n                </SkinContext.Provider>\n            </div>\n        </CountContext.Provider >\n    );\n\n}\n\nexport default ScoreList;","import './App.css';\nimport PlayerForm from './components/PlayerForm';\nimport ScoreList from './components/ScoreList';\nimport React, { useState } from 'react';\n\n\n\nfunction App() {\n  const [name, setName] = useState([]);\n  // const [currentPage, setCurrentPage] = useState('PlayerForm');\n  const [isToggled, setIsToggled] = useState(true);\n\n  return (\n<div className=\"App\">\n  { isToggled ?   <PlayerForm name={name} setName={setName}/> : <ScoreList name={name} setName={setName}/> }\n  <button className=\"submitButton\" onClick={()=> setIsToggled(!isToggled)}>Start</button>\n</div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
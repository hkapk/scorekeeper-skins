[{"/Users/hank/bootcamp/projects/scorekeeper-skins/src/index.js":"1","/Users/hank/bootcamp/projects/scorekeeper-skins/src/App.js":"2","/Users/hank/bootcamp/projects/scorekeeper-skins/src/reportWebVitals.js":"3","/Users/hank/bootcamp/projects/scorekeeper-skins/src/components/Navbar.jsx":"4","/Users/hank/bootcamp/projects/scorekeeper-skins/src/components/PlayerForm.jsx":"5","/Users/hank/bootcamp/projects/scorekeeper-skins/src/components/PlayerList.jsx":"6","/Users/hank/bootcamp/projects/scorekeeper-skins/src/components/Player.jsx":"7","/Users/hank/bootcamp/projects/scorekeeper-skins/src/components/Score.jsx":"8","/Users/hank/bootcamp/projects/scorekeeper-skins/src/components/ScoreList.jsx":"9"},{"size":535,"mtime":1658078094506,"results":"10","hashOfConfig":"11"},{"size":872,"mtime":1659390588669,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1658078094506,"results":"13","hashOfConfig":"11"},{"size":427,"mtime":1658109186281,"results":"14","hashOfConfig":"11"},{"size":912,"mtime":1659391058385,"results":"15","hashOfConfig":"11"},{"size":791,"mtime":1659292361550,"results":"16","hashOfConfig":"11"},{"size":564,"mtime":1659390059304,"results":"17","hashOfConfig":"11"},{"size":860,"mtime":1659370583939,"results":"18","hashOfConfig":"11"},{"size":2504,"mtime":1659391010932,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"g6sg9a",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"/Users/hank/bootcamp/projects/scorekeeper-skins/src/index.js",[],["41","42"],"/Users/hank/bootcamp/projects/scorekeeper-skins/src/App.js",[],"/Users/hank/bootcamp/projects/scorekeeper-skins/src/reportWebVitals.js",[],"/Users/hank/bootcamp/projects/scorekeeper-skins/src/components/Navbar.jsx",[],["43","44"],"/Users/hank/bootcamp/projects/scorekeeper-skins/src/components/PlayerForm.jsx",[],"/Users/hank/bootcamp/projects/scorekeeper-skins/src/components/PlayerList.jsx",[],"/Users/hank/bootcamp/projects/scorekeeper-skins/src/components/Player.jsx",[],"/Users/hank/bootcamp/projects/scorekeeper-skins/src/components/Score.jsx",[],"/Users/hank/bootcamp/projects/scorekeeper-skins/src/components/ScoreList.jsx",["45"],"import React, { useState, createContext, useContext } from 'react';\nimport Score from './Score';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport { PageContext } from '../App';\n\nexport const CountContext = createContext(1);\nexport const SkinContext = createContext(1);\n\nfunction ScoreList({ name }) {\n\n    const [holeCount, setHoleCount] = useState(1);\n    const [skinCount, setSkinCount] = useState(1);\n    //const { playerSkinCount, setPlayerSkinCount } = useContext(PlayerSkinContext);\n    const { isToggled, setIsToggled } = useContext(PageContext);\n\n\n    const pushHole = () => {\n        setSkinCount(skinCount + 1);\n        setHoleCount(holeCount + 1);\n\n    };\n\n    const reduceHole = () => {\n        if (holeCount === 1) {\n            setIsToggled(true)\n        }\n        if (holeCount > 1 && skinCount > 1) {\n            setHoleCount(holeCount - 1);\n            setSkinCount(skinCount - 1);\n            //return player skin count\n            // setPlayerSkinCount(playerSkinCount - 1);\n        };\n    }\n\n    const sortByDate = (a, b) => {\n        return a.date - b.date;\n    }\n\n    return (\n        <CountContext.Provider value={{ holeCount, setHoleCount }}>\n            <div><div className='score-title'>\n                <button className=\"previous-hole\" onClick={() => reduceHole()}>            <FontAwesomeIcon icon={faArrowLeft} /></button>\n                Hole #{holeCount}\n            </div>\n                <SkinContext.Provider value={{ skinCount, setSkinCount }}>\n                    <div className='score-title-2'>\n                        Skins Available:  {skinCount}\n                        <div><button className=\"push\" onClick={() => pushHole()}>\n                            Push Hole </button>\n                        </div>\n                    </div>\n                    <li className='player-item'>\n                        {\n                            name.sort(sortByDate).map((value, index) => (\n                                <Score\n                                    skinCount={skinCount}\n                                    key={index}\n                                    name={value}\n                                    index={index}\n                                />\n                            ))\n                        }\n                    </li>\n                </SkinContext.Provider>\n            </div>\n        </CountContext.Provider >\n    );\n\n}\n\nexport default ScoreList;",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"46","replacedBy":"50"},{"ruleId":"48","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":15,"column":13,"nodeType":"54","messageId":"55","endLine":15,"endColumn":22},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],["56"],["57"],"no-unused-vars","'isToggled' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]